name: 'Deploy-terraform-merge-test'
on:
#   pull_request:
#     types:
#       - closed
      
  workflow_dispatch:
  
jobs:
  # Get variable files (currently on for all environments)  
  
  variables: 
    uses: ./.github/workflows/variables.yml
  
######################################################################################################
###########                               Dev                               ##########################
######################################################################################################

  terraform-apply-dev:
    needs: variables
    runs-on: ubuntu-latest
    environment: dev
    # if: github.event.review.state == 'approved'
    # if: github.event.pull_request.merged == true
    defaults:
      run:
        shell: bash
        working-directory: tf_core
        
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest
      
      - name: Terraform Init
        run: | 
          terraform init \
          --backend-config="storage_account_name=${{ needs.variables.outputs.az_mgmt_storage_acc }}dev" \
          --backend-config="container_name=${{ needs.variables.outputs.az_mgmt_container_name }}" \
          --backend-config="resource_group_name=${{ needs.variables.outputs.az_mgmt_resource_group }}" \
          --backend-config="key=${{ needs.variables.outputs.tf_key }}"
          
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: plan.tfplan.zip
          path: tf_core/plan.tfplan.zip

      - name: Decompress TF Plan artifact
        run: unzip plan.tfplan.zip
          
      - name: Terraform Apply
        # if: github.event.review.state == 'approved' # github.ref == 'refs/heads/main' && github.event_name == 'push'
        # run: terraform apply -auto-approve -input=false -var-file="config_dev.tfvars.json"
        run: terraform apply plan.tfplan
     
        
