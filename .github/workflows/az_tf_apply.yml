### Reusable workflow to download terraform artifact built by `az_tf_plan` and apply the artifact/plan ###
name: "Apply_TF_Plan"
on:
  workflow_call:
    inputs:
      path:
        description: 'Specifies the path of the root terraform module.'
        required: true
        type: string
      tf_version:
        description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
        required: false
        type: string
        default: latest
      gh_environment:
        required: false
        type: string
        default: dev      

    secrets:
      AZURE_AD_CLIENT_ID:
        required: true
      AZURE_AD_CLIENT_SECRET:
        required: true
      AZURE_AD_SUBSCRIPTION_ID:
        required: true
      AZURE_AD_TENANT_ID:
        required: true

jobs:
  variables:
    uses: ./.github/workflows/variables.yml
  apply-plan:
    runs-on: ubuntu-latest
    # environment: ${{ inputs.gh_environment }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.path }}
        
    env:
#       STORAGE_ACCOUNT: ${{ inputs.az_storage_acc }}
#       CONTAINER_NAME: ${{ inputs.az_container_name }}
#       RESOURCE_GROUP: ${{ inputs.az_resource_group }}
#       TF_KEY: ${{ inputs.tf_key }}.tfstate
      ###AZURE Client details###
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_AD_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: ${{ needs.variables.outputs.tf_key }}
          path: ${{ inputs.path }}

      - name: Decompress TF Plan artifact
        run: unzip ${{ needs.variables.outputs.tf_key }}.zip

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: ${{ inputs.tf_version }}

      - name: Terraform Init
        run: | 
          terraform init \
          --backend-config="storage_account_name=${{ needs.variables.outputs.az_mgmt_storage_acc }}" \
          --backend-config="container_name=${{ needs.variables.outputs.az_mgmt_container_name }}" \
          --backend-config="resource_group_name=${{ needs.variables.outputs.az_mgmt_resource_group }}" \
          --backend-config="key=${{ needs.variables.outputs.tf_key }}"

      - name: Terraform Apply
        run: terraform apply plan.tfplan
