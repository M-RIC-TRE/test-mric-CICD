name: 'Deploy-pull-request-merge'
on:
  pull_request:
    branches: 
       - main  
    types:
      - closed   
  workflow_dispatch:
  
jobs:
  # Get variable files (currently on for all environments)  
  variables: 
    uses: ./.github/workflows/variables.yml
  
######################################################################################################
###########                               Dev                               ##########################
######################################################################################################

  build_terraform_development:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: variables
    permissions:
      pull-requests: write
    environment: dev
    env:
       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    defaults:
      run:
        shell: bash
        #working-directory: tf_core
    steps:    
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          enable-AzPSSession: true
      
      - name: Download plan from storage account
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            # az storage account donwload
            az storage blob download --account-name "${{ needs.variables.outputs.az_mgmt_storage_acc }}dev" --container-name ${{ needs.variables.outputs.az_mgmt_container_name }} --name tfplan.zip --file tfplan.zip
    
      - name: Decompress TF Plan artifact
        run: unzip tfplan.zip
    
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest

      - name: Terraform Init
        run: | 
          terraform init \
          --backend-config="storage_account_name=${{ needs.variables.outputs.az_mgmt_storage_acc }}dev" \
          --backend-config="container_name=${{ needs.variables.outputs.az_mgmt_container_name }}" \
          --backend-config="resource_group_name=${{ needs.variables.outputs.az_mgmt_resource_group }}" \
          --backend-config="key=${{ needs.variables.outputs.tf_key }}" 
      
      - name: Terraform Apply using plan
        run: terraform apply plan.tfplan
  
######################################################################################################
###########                               Prod                              ##########################
######################################################################################################

  build_terraform_production:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [variables,build_terraform_development]
    permissions:
      pull-requests: write
    environment: prod
    env:
       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    defaults:
      run:
        shell: bash
    steps:    
      - name: Log in with Azure
        uses: azure/login@v1
        with:
          creds: "${{ secrets.AZURE_CREDENTIALS }}"
          enable-AzPSSession: true
      
      - name: Download plan from storage account
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            # az storage account donwload
            az storage blob download --account-name "${{ needs.variables.outputs.az_mgmt_storage_acc }}prod001" --container-name ${{ needs.variables.outputs.az_mgmt_container_name }} --name tfplan.zip --file tfplan.zip
    
      - name: Decompress TF Plan artifact
        run: unzip tfplan.zip
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest

      - name: Terraform Init
        run: | 
          terraform init \
          --backend-config="storage_account_name=${{ needs.variables.outputs.az_mgmt_storage_acc }}prod001" \
          --backend-config="container_name=${{ needs.variables.outputs.az_mgmt_container_name }}" \
          --backend-config="resource_group_name=${{ needs.variables.outputs.az_mgmt_resource_group }}" \
          --backend-config="key=${{ needs.variables.outputs.tf_key }}" 
      
      - name: Terraform Apply using plan
        run: terraform apply plan.tfplan
