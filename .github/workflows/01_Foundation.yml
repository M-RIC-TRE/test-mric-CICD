name: "01 Foundation"
on:
  workflow_dispatch:

jobs:
  Plan_Dev:
    uses: M-RIC-TRE/infrastructure-landing-mric/.github/workflows/az_tf_plan.yml@main
    with:
      path: 01_Foundation                  ## Path to terraform root module (Required)
      tf_version: latest                 ## Terraform version e.g: 1.1.0 Default=latest (Optional)
      az_resource_group: rg-mgmt-terraform     ## AZ backend - AZURE Resource Group hosting terraform backend storage acc (Required)
      az_storage_acc: stmgmttfdev001    ## AZ backend - AZURE terraform backend storage acc (Required)
      az_container_name: tfcontain ## AZ backend - AZURE storage container hosting state files (Required)
      tf_key: tfcontaindev                ## AZ backend - Specifies name that will be given to terraform state file and plan artifact (Required)
      tf_vars_file: config-dev.tfvars    ## Terraform TFVARS (Required)
      enable_TFSEC: true                 ## (Optional)  Enable TFSEC IaC scans (Private repo requires GitHub enterprise)
    secrets:
      arm_client_id: ${{ secrets.AZURE_CLIENT_ID }}             ## ARM Client ID 
      arm_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}     ## ARM Client Secret
      arm_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} ## ARM Subscription ID
      arm_tenant_id: ${{ secrets.AZURE_TENANT_ID }}             ## ARM Tenant ID

  Deploy_Dev:
    needs: Plan_Dev
    uses: M-RIC-TRE/infrastructure-landing-mric/.github/workflows/az_tf_apply.yml@main
    with:
      path: 01_Foundation                   ## Path to terraform root module (Required)
      tf_version: latest                 ## Terraform version e.g: 1.1.0 Default=latest (Optional)
      az_resource_group: rg-mgmt-terraform      ## AZ backend - AZURE Resource Group hosting terraform backend storage acc (Required)
      az_storage_acc: stmgmttfdev001    ## AZ backend - AZURE terraform backend storage acc (Required)
      az_container_name: tfcontain ## AZ backend - AZURE storage container hosting state files (Required)
      tf_key: tfcontaindev                 ## AZ backend - Specifies name of the terraform state file and workflow artifact to download (Required)
      gh_environment: dev        ## GH Environment. Default=null - (Optional)
    secrets:
      arm_client_id: ${{ secrets.AZURE_CLIENT_ID }}             ## ARM Client ID 
      arm_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}     ## ARM Client Secret
      arm_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} ## ARM Subscription ID
      arm_tenant_id: ${{ secrets.AZURE_TENANT_ID }}             ## ARM Tenant ID
      
#       Plan_Prod:
#     uses: M-RIC-TRE/infrastructure-landing-mric/.github/workflows/az_tf_plan.yml@master
#     with:
#       path: 02_Storage
#       tf_version: latest
#       az_resource_group: Terraform-GitHub-Backend
#       az_storage_acc: tfgithubbackendsa
#       az_container_name: gh-terraform-deployments
#       tf_key: storage-prod
#       tf_vars_file: config-prod.tfvars
#       enable_TFSEC: true                       
#     secrets:
#       arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
#       arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
#       arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
#       arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}

#   Deploy_Prod:
#     needs: [Plan_Prod, Deploy_Uat]
#     uses: M-RIC-TRE/infrastructure-landing-mric/.github/workflows/az_tf_plan.yml@master
#     with:
#       path: 02_Storage
#       az_resource_group: Terraform-GitHub-Backend
#       az_storage_acc: tfgithubbackendsa
#       az_container_name: gh-terraform-deployments
#       tf_key: storage-prod
#       gh_environment: Production
#     secrets:
#       arm_client_id: ${{ secrets.ARM_CLIENT_ID }}
#       arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
#       arm_subscription_id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
#       arm_tenant_id: ${{ secrets.ARM_TENANT_ID }}
